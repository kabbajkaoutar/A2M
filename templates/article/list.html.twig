{% extends 'base.html.twig' %}

{% block stylesheets %}
    {# Include DataTables CSS #}
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css">
{% endblock %}

{% block body %}
    <h1 class="text-3xl font-bold mb-4" style="text-align: center;">Liste des articles</h1>
    <div class="container mx-auto">
        <div class="overflow-x-auto">
            <table id="articles-table" class="table table-hover">
                <thead>
                <tr>
                    <th>ID</th>
                    <th>Contenu du Contexte</th>
                </tr>
                </thead>
            </table>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {# Include jQuery and DataTables JavaScript #}
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>

    {# Include DatatablesBundle JavaScript #}

    <script>
        $(document).ready(function() {
            $('#articles-table').DataTable({
                "processing": true,
                "serverSide": true,
                "ordering": false,
                "searching": true,
                "ajax": {
                    "url": "{{ path('api_listArticles') }}",
                    "type": "POST",
                    "contentType": "application/json",
                    "data": function (d) {
                        // Add pagination parameters to the request data
                        d.start = d.start || 0; // Start index of the records to fetch
                        d.length = d.length || 10; // Number of records per page
                        d.draw = d.draw || 1; // Draw counter (used by DataTables)
                        console.log(JSON.stringify(d));
                        return JSON.stringify(d); // Send data as JSON string
                    },
                    "dataSrc": function (json) {
                        // Process the response data and return the data array
                        return json.data;
                    }

                },
                "columns": [
                    { "data": "id" },
                    {
                        "data": "context",
                        "render": function(data) {
                            let html = '';
                            for (const [key, value] of Object.entries(data)) {
                                html += `<div><strong>${key}:</strong> ${value}</div>`;
                            }
                            return html;
                        }
                    }
                ]
            });
        });

    </script>
{% endblock %}

